{"version":3,"sources":["users.js"],"names":["orderByItems","document","querySelectorAll","selectedTotal","getElementById","selectedBatch","selectedRole","selectedGender","selectedDOJ","selectedSearch","usersResultList","editingUserFlag","batchCode","role","gender","orderBy","ascOrDesc","updateUsersList","console","log","value","doj","search","xhttp1","XMLHttpRequest","onreadystatechange","this","readyState","status","innerHTML","responseText","getElementsByTagName","length","open","send","individualEdit","e","stopPropagation","target","id","cancelId","dataset","submitId","xhttp3","setRequestHeader","batchTemplate","date","classCode","instructorCode","startTime","endTime","roomCode","editId","elementEditing","elementEditingRole","querySelector","elementEditingStudentCode","classList","add","studentCode","deleteId","xhttp2","confirm","orderUsersBy","prevOrderBy","i","remove","init","addEventListener"],"mappings":"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","sourcesContent":["/****************Variables****************/\r\n\r\n// var timetableOuter = document.getElementById('timetableOuter');\r\n// var selectedDateOuter = document.getElementById('selectedDateOuter');\r\n// var selectedBatchOuter = document.getElementById('selectedBatchOuter');\r\nvar orderByItems = document.querySelectorAll('[data-order-by]');\r\n// var filterStartDate = document.getElementById('filterStartDate');\r\n// var filterEndDate = document.getElementById('filterEndDate');\r\n//\r\nvar selectedTotal = document.getElementById('selectedTotal');\r\nvar selectedBatch = document.getElementById('selectedBatch');\r\nvar selectedRole = document.getElementById('selectedRole');\r\nvar selectedGender = document.getElementById('selectedGender');\r\nvar selectedDOJ = document.getElementById('selectedDOJ');\r\nvar selectedSearch = document.getElementById('selectedSearch');\r\n//\r\n// var addClassBtn = document.getElementById('addClassBtn');\r\n//\r\nvar usersResultList = document.getElementById('usersResultList');\r\n//\r\n// var selectedClassEl = document.getElementById('selectedClass');\r\n// var selectedInstructorEL = document.getElementById('selectedInstructor');\r\n// var selectedRoomEL = document.getElementById('selectedRoom');\r\n//\r\nvar editingUserFlag = false;\r\nvar batchCode = role = gender = null;\r\n// var layout = 'list';\r\nvar orderBy = 'doj';\r\nvar ascOrDesc = 'ASC';\r\n\r\n/****************Functions****************/\r\n\r\n// Update users list\r\nfunction updateUsersList() {\r\n  console.log('users list updating...');\r\n\r\n  editingUserFlag = false;\r\n\r\n  // check which batch is selected in dropdown\r\n  batchCode = selectedBatch.value;\r\n  role = selectedRole.value;\r\n  gender = selectedGender.value;\r\n  doj = selectedDOJ.value;\r\n  search = selectedSearch.value;\r\n\r\n  // load content from database\r\n  var xhttp1 = new XMLHttpRequest();\r\n  xhttp1.onreadystatechange = function() {\r\n    if (this.readyState == 4 && this.status == 200) {\r\n     usersResultList.innerHTML = this.responseText;\r\n     // count the total number of rows return\r\n     selectedTotal.value = usersResultList.getElementsByTagName('tr').length;\r\n   } else {\r\n     // console.log(this.readyState, this.status);\r\n   }\r\n  };\r\n  xhttp1.open(\"GET\", \"users_handler.php?action=updateUsersList&batchCode=\"+batchCode+\r\n    \"&role=\"+role+\r\n    \"&gender=\"+gender+\r\n    \"&orderBy=\"+orderBy+\r\n    \"&doj=\"+doj+\r\n    \"&search=\"+search+\r\n    \"&ascOrDesc=\"+ascOrDesc, true);\r\n  xhttp1.send();\r\n}\r\n\r\n// Edit -> Delete -> Cancel -> Submit users fuctions\r\nfunction individualEdit(e) {\r\n  e.stopPropagation();\r\n  // delete user -> only if not editing any user\r\n  if(e.target.id == 'delete' && !editingUserFlag) {\r\n    var deleteId = e.target.dataset.id;\r\n    console.log('deleting: ' + deleteId);\r\n\r\n    var xhttp2 = new XMLHttpRequest();\r\n    xhttp2.onreadystatechange = function() {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n       usersResultList.innerHTML = this.responseText;\r\n       // count the total number of rows return\r\n       selectedTotal.value = usersResultList.getElementsByTagName('tr').length;\r\n     } else {\r\n       console.log(this.status);\r\n     }\r\n    };\r\n\r\n    var deleteConfirmation = confirm(\"Want to delete?\");\r\n    if (deleteConfirmation) {\r\n      //Logic to delete the item\r\n      xhttp2.open(\"POST\", \"users_handler.php\", true);  // open(method, url, async)\r\n      xhttp2.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n      xhttp2.send(\"action=delete&batchCode=\"+batchCode+\r\n        \"&role=\"+role+\r\n        \"&gender=\"+gender+\r\n        \"&doj=\"+doj+\r\n        \"&deleteId=\"+deleteId+\r\n        \"&search=\"+search+\r\n        \"&orderBy=\"+orderBy+\r\n        \"&ascOrDesc=\"+ascOrDesc, true);\r\n    } else {\r\n      console.log('Deletion is stopped!');\r\n    }\r\n  }\r\n  // edit class -> only if not editing any class\r\n  else if(e.target.id == 'edit' && !editingUserFlag) {\r\n    var editId = e.target.dataset.id;\r\n    console.log('editing: ' + editId);\r\n\r\n    editingUserFlag = true;\r\n\r\n    var elementEditing = document.getElementById('edit_'+editId);\r\n    var elementEditingRole = elementEditing.querySelector('.edit-role');\r\n    var elementEditingStudentCode = elementEditing.querySelector('.edit-student-code');\r\n\r\n    elementEditing.classList.add('editing-class');\r\n    elementEditingStudentCode.innerHTML = '<input type=\"text\" class=\"form-control\" id=\"editingStudentCode\" value=\"'+elementEditingStudentCode.dataset.studentCode+'\">';\r\n\r\n    elementEditingRole.innerHTML = `\r\n      <select class=\"custom-select my-1\" id=\"editingRole\">\r\n        <option value=\"instructor\">Instructor</option>\r\n        <option value=\"student\">Students</option>\r\n        <option value=\"subscriber\" selected>Subscriber</option>\r\n      </select>`;\r\n  }\r\n  // cancel user -> if editing any user\r\n  else if(e.target.id == 'cancel' && editingUserFlag) {\r\n    var cancelId = e.target.dataset.id;\r\n    console.log('cancelling: ' + cancelId);\r\n\r\n    updateUsersList();\r\n  }\r\n  // submit class -> if editing any class\r\n  else if(e.target.id == 'submit' && editingUserFlag) {\r\n    var submitId = e.target.dataset.id;\r\n    console.log('submitting: ' + submitId);\r\n\r\n    var role = document.getElementById('editingRole').value;\r\n    var studentCode = document.getElementById('editingStudentCode').value;\r\n    // console.log(batchCode, batchTemplate, role, studentCode);\r\n\r\n    var xhttp3 = new XMLHttpRequest();\r\n    xhttp3.onreadystatechange = function() {\r\n      if (this.readyState == 4 && this.status == 200) {\r\n        usersResultList.innerHTML = this.responseText;\r\n        editingUserFlag = false;\r\n      }\r\n    };\r\n    xhttp3.open(\"POST\", \"users_handler.php\", true);  // open(method, url, async)\r\n    xhttp3.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\r\n    xhttp3.send(\"action=submitClass&batchCode=\"+batchCode+\"&batchTemplate=\"+batchTemplate+\"&orderBy=\"+orderBy+\r\n    \"&ascOrDesc=\"+ascOrDesc+\"&date=\"+date+\"&classCode=\"+classCode+\"&instructorCode=\"+instructorCode+\r\n    \"&startTime=\"+startTime+\"&endTime=\"+endTime+\"&roomCode=\"+roomCode+\"&submitId=\"+submitId);\r\n\r\n    // updateTimeTableList();\r\n  }\r\n}\r\n\r\n// function to order tables on click\r\nfunction orderUsersBy(e) {\r\n  var prevOrderBy = orderBy;\r\n\r\n  // remove active class from all columns\r\n  for(var i = 0; i < orderByItems.length; i++) {\r\n    orderByItems[i].classList.remove('active-ASC');\r\n    orderByItems[i].classList.remove('active-DESC');\r\n  }\r\n\r\n  orderBy = e.target.dataset.orderBy;\r\n\r\n  // toggle ASC | DESC if column clicked is same as previous click\r\n  if(prevOrderBy == orderBy) {\r\n    if(ascOrDesc == 'DESC') {\r\n      ascOrDesc = 'ASC';\r\n    } else {\r\n      ascOrDesc = 'DESC';\r\n    }\r\n    // make ASC if column clicked is different from previous click\r\n  } else {\r\n    ascOrDesc = 'ASC';\r\n  }\r\n\r\n  // add active class to clicked column\r\n  e.target.classList.add('active-'+ascOrDesc);\r\n\r\n  console.log('ordering by...' + orderBy, ascOrDesc);\r\n\r\n  updateUsersList();\r\n}\r\n\r\n\r\n// run on page laod\r\nfunction init() {\r\n  updateUsersList();\r\n};\r\ninit();\r\n\r\n/****************Events****************/\r\nselectedBatch.addEventListener('change', updateUsersList, false);\r\nselectedRole.addEventListener('change', updateUsersList, false);\r\nselectedGender.addEventListener('change', updateUsersList, false);\r\nselectedDOJ.addEventListener('change', updateUsersList, false);\r\nselectedSearch.addEventListener('keyup', updateUsersList, false);\r\nusersResultList.addEventListener('click', individualEdit, false);\r\nfor(var i = 0; i < orderByItems.length; i++) {\r\n  orderByItems[i].addEventListener('click', orderUsersBy, false);\r\n}\r\n"],"file":"users.min.js"}